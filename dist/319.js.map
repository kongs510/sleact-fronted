{"version":3,"sources":["webpack://alecture/./pages/SignUp/index.tsx"],"names":["data","error","revalidate","useSWR","fetcher","email","onChangeEmail","useInput","nickname","onChangeNickname","password","setPassword","passwordCheck","setPasswordCheck","mismatchError","setMismatchError","useState","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onChangePassword","useCallback","e","target","value","onChangePasswordCheck","onSubmit","preventDefault","console","log","axios","then","response","catch","finally","undefined","to","id","type","name","onChange"],"mappings":"8NAQA,MA8GA,EA9Ge,KACb,MAAM,KAAEA,EAAF,MAAQC,EAAR,WAAeC,IAAeC,QAAO,aAAcC,MAElDC,EAAOC,IAAiBC,OAAS,KACjCC,EAAUC,IAAoBF,OAAS,KACvCG,EAAD,CAAaC,IAAeJ,OAAS,KACpCK,EAAD,CAAkBC,IAAoBN,OAAS,KAC9CO,EAAeC,IAAoBC,eAAS,IAC5CC,EAAaC,IAAkBF,cAAS,KACxCG,EAAeC,IAAoBJ,eAAS,GAE7CK,GAAmBC,kBACtBC,IACCZ,EAAYY,EAAEC,OAAOC,OACrBV,EAAiBQ,EAAEC,OAAOC,QAAUb,KAEtC,CAACA,IAGGc,GAAwBJ,kBAC3BC,IACCV,EAAiBU,EAAEC,OAAOC,OAC1BV,EAAiBQ,EAAEC,OAAOC,QAAUf,KAEtC,CAACA,IAGGiB,GAAWL,kBACdC,IACCA,EAAEK,kBACGd,GAAiBN,IACpBqB,QAAQC,IAAI,cACZZ,EAAe,IACfE,GAAiB,GACjBW,SACQ,aAAc,CAClB1B,QACAG,WACAE,aAEDsB,MAAMC,IACLJ,QAAQC,IAAIG,GACZb,GAAiB,MAElBc,OAAOjC,IACN4B,QAAQC,IAAI7B,EAAMgC,UAClBf,EAAejB,EAAMgC,SAASjC,SAE/BmC,SAAQ,YAGf,CAAC9B,EAAOG,EAAUE,EAAUE,EAAeE,IAG7C,YAAasB,IAATpC,EACK,qCAGLA,EACK,gBAAC,KAAD,CAAUqC,GAAG,iCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,eACA,gBAAC,KAAD,CAAMX,SAAUA,GACd,gBAAC,KAAD,CAAOW,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQf,MAAOpB,EAAOoC,SAAUnC,MAGxE,gBAAC,KAAD,CAAOgC,GAAG,kBACR,mCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,OAAOD,GAAG,WAAWE,KAAK,WAAWf,MAAOjB,EAAUiC,SAAUhC,MAGhF,gBAAC,KAAD,CAAO6B,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWf,MAAOf,EAAU+B,SAAUpB,MAGpF,gBAAC,KAAD,CAAOiB,GAAG,wBACR,uCACA,2BACE,gBAAC,KAAD,CACEC,KAAK,WACLD,GAAG,iBACHE,KAAK,iBACLf,MAAOb,EACP6B,SAAUf,KAGbZ,GAAiB,gBAAC,KAAD,0BAChBN,GAAY,gBAAC,KAAD,qBACbS,GAAe,gBAAC,KAAD,KAAQA,GACvBE,GAAiB,gBAAC,KAAD,6BAEpB,gBAAC,KAAD,CAAQoB,KAAK,UAAb,SAEF,gBAAC,KAAD,mBAEE,gBAAC,KAAD,CAAMF,GAAG,UAAT","file":"319.js","sourcesContent":["import useInput from '@hooks/useInput';\nimport fetcher from '@utils/fetcher';\nimport React, { useCallback, useState, VFC } from 'react';\nimport axios from 'axios';\nimport useSWR from 'swr';\nimport { Success, Form, Error, Label, Input, LinkContainer, Button, Header } from './styles';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst SignUp = () => {\n  const { data, error, revalidate } = useSWR('/api/users', fetcher);\n\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, , setPassword] = useInput('');\n  const [passwordCheck, , setPasswordCheck] = useInput('');\n  const [mismatchError, setMismatchError] = useState(false);\n  const [signUpError, setSignUpError] = useState('');\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\n\n  const onChangePassword = useCallback(\n    (e) => {\n      setPassword(e.target.value);\n      setMismatchError(e.target.value !== passwordCheck);\n    },\n    [passwordCheck],\n  );\n\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setMismatchError(e.target.value !== password);\n    },\n    [password],\n  );\n\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!mismatchError && nickname) {\n        console.log('서버로 회원가입하기');\n        setSignUpError('');\n        setSignUpSuccess(false);\n        axios\n          .post('/api/users', {\n            email,\n            nickname,\n            password,\n          })\n          .then((response) => {\n            console.log(response);\n            setSignUpSuccess(true);\n          })\n          .catch((error) => {\n            console.log(error.response);\n            setSignUpError(error.response.data);\n          })\n          .finally(() => {});\n      }\n    },\n    [email, nickname, password, passwordCheck, mismatchError],\n  );\n\n  if (data === undefined) {\n    return <div>로딩중...</div>;\n  }\n\n  if (data) {\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>Sleact</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"nickname-label\">\n          <span>닉네임</span>\n          <div>\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n        </Label>\n        <Label id=\"password-check-label\">\n          <span>비밀번호 확인</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password-check\"\n              name=\"password-check\"\n              value={passwordCheck}\n              onChange={onChangePasswordCheck}\n            />\n          </div>\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\n          {signUpError && <Error>{signUpError}</Error>}\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\n        </Label>\n        <Button type=\"submit\">회원가입</Button>\n      </Form>\n      <LinkContainer>\n        이미 회원이신가요?&nbsp;\n        <Link to=\"/login\">로그인 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"sourceRoot":""}